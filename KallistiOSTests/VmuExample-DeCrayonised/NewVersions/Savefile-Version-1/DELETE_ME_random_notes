//Notes:

//I don't think the pointers the user has are mapped to the variables right


#include <stdio.h>

int hidden[10]; //The actual values we manipulate
int ** mapper;  //The variable in the history struct
int * visible;  //This is what the user controls

void func(void ** lol){
    mapper = (int**)lol;
}

#define USE_FUNCTION

int main()
{
    #ifdef USE_FUNCTION
    func(&visible);    //Doesn't set it right
    #else
    mapper = &visible;
    #endif
    *mapper = &hidden[4];
    
    for(int i= 0; i < 10; i++){
        hidden[i] = 500 + i;
    }
    
    printf("%d", visible[0]);

    return 0;
}


//FUNCTIONS WITH NO DREAMCAST SPECIFIC CODE
uint8_t crayon_misc_is_big_endian();
uint8_t crayon_savefile_delete_savedata(crayon_savefile_details_t *details);    //UNFINISHED
void crayon_savefile_free(crayon_savefile_details_t *details);
uint8_t crayon_savefile_get_valid_function(uint32_t function);
void crayon_savefile_update_valid_saves(crayon_savefile_details_t *details, uint8_t modes);
void crayon_savefile_solidify(crayon_savefile_details_t *details);
crayon_savefile_history_t *crayon_savefile_remove_variable(crayon_savefile_details_t *details,
    crayon_savefile_history_t *target_node, uint8_t remove_command, crayon_savefile_history_t *transfer_var,
    crayon_savefile_version_t version);
void __attribute__((weak)) crayon_savefile_serialise(crayon_savefile_data_t *sf_data, uint8_t *pkg_data);
void __attribute__((weak)) crayon_savefile_deserialise(crayon_savefile_data_t *sf_data, uint8_t *pkg_data,
    uint32_t pkg_size);
crayon_savefile_history_t *crayon_savefile_add_variable(crayon_savefile_details_t *details, void **data_ptr,
    uint8_t data_type, uint16_t length, const void *default_value, crayon_savefile_version_t version);
uint8_t crayon_savefile_set_string(crayon_savefile_details_t *details, const char *string, uint8_t string_id);
uint8_t crayon_savefile_get_memcard_bit(uint8_t memcard_bitmap, uint8_t save_device_id);
void crayon_savefile_set_memcard_bit(uint8_t *memcard_bitmap, uint8_t save_device_id);


//FUNCTIONS WITH DREAMCAST SPECIFIC CODE
uint8_t crayon_savefile_save_savedata(crayon_savefile_details_t *details);
uint8_t crayon_savefile_load_savedata(crayon_savefile_details_t *details);
uint8_t crayon_savefile_init_savefile_details(crayon_savefile_details_t *details, const char *save_name,
    crayon_savefile_version_t version); //Just a macro that isn't defined outside Dreamcast
uint16_t crayon_savefile_device_free_blocks(int8_t port, int8_t slot);
int16_t crayon_savefile_get_save_block_count(crayon_savefile_details_t *details);
uint8_t crayon_savefile_check_device_for_function(uint32_t function, int8_t save_device_id);
uint8_t crayon_savefile_check_savedata(crayon_savefile_details_t *details, int8_t save_device_id);


//TECHNICALLY DREAMCAST ONLY, BUT WORKS ON PC
uint8_t crayon_savefile_add_eyecatcher(crayon_savefile_details_t *details, const char *eyecatch_path);
uint8_t crayon_savefile_add_icon(crayon_savefile_details_t *details, const char *image, const char *palette,
    uint8_t icon_anim_count, uint16_t icon_anim_speed);
void crayon_savefile_free_icon(crayon_savefile_details_t *details);
void crayon_savefile_free_eyecatcher(crayon_savefile_details_t *details);
uint16_t crayon_savefile_bytes_to_blocks(size_t bytes);
vec2_s8_t crayon_savefile_dreamcast_get_port_and_slot(int8_t savefile_device_id);


//ALREADY FIXED
uint16_t crayon_savefile_detail_string_length(uint8_t string_id);
void crayon_vmu_display_icon(uint8_t vmu_bitmap, void *icon);

